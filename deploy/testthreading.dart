import "dart:html" as o;import "dart:isolate" as u;import "dart:async" as JB;import "dart:convert" as KB;import "dart:mirrors" as LB;class MB{static const  NB="Chrome";final  FB;final  minimumVersion;const MB(this.FB,[this.minimumVersion]);}class OB{const OB();}class PB{final  name;const PB(this.name);}class QB{const QB();}class RB{const RB();}var t; v( g, h){var i=LB.currentMirrorSystem();var j=i.findLibrary(g);var k=(j.first as LB.LibraryMirror);var m=k.classes[h];var q=m.newInstance(const Symbol(''),[] );return q.reflectee;}class AB{var s;}class BB{var s;var a;}class l{var s;var b;} CB( m){print('enter func1');var j=new JB.Completer();var g=new u.ReceivePort();g.receive((h,UB){if(h=='close'){j.complete(h);print('session done');g.close();}else{print(h);}});var i=u.spawnFunction(DB,(k){if(k!=null)print(k.toString());});print('sending start');i.send('start',g.toSendPort());print('sending object');i.send(m,g.toSendPort());print('sending stop');i.send('stop',g.toSendPort());return j.future;}DB(){u.port.receive((g,h){if(g is l){g=(g as l).s+(g as l).b.s+(g as l).b.a.s;}h.send('receive msg [${g}]');switch (g){case 'start':break;case 'stop':h.send('close');u.port.close();break;default:break;}});} main(){var g=o.query("#sample_text_id");var j=o.query("#title_id");var k=new AB()..s='1';var m=new BB()..a=k..s='2';var h=new l()..b=m..s='3';var SB=v(const Symbol('dart.core'),const Symbol('StringBuffer'));var q=new o.ButtonElement()..text="test"..id="btn_id"..onClick.listen(( i){var GB=KB.JSON.encode(h);g.text=GB;assert(()=>true);});var TB=CB(h)..then((HB){g.text=HB;});var IB=g.parent;IB.children.add(q);o.query("#sample_text_id")..text="Click me!"..onClick.listen(EB)..onMouseEnter.listen(( i){t=g.text;g.text=j.text;})..onMouseLeave.listen(( i){g.text=t;});} EB( j){var h=o.query("#sample_text_id").text;var i=new StringBuffer();for(int g=h.length-1;g>=0;g-- ){i.write(h[g]);}o.query("#sample_text_id").text=i.toString();}